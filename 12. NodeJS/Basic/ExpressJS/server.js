// Подключение фреймворка происходит через npm instal после чего, важно, чтобы при init файлом входа был ваш файл сервера
// После установки мы подключаем фреймворк в файле js через require

// const app это хорошая практика, чтобы другим было понятнее, что происходит в коде

const express = require ("express");
const app = express();
const port = 3000;

app.get("/", function (request, response) {
    console.log(request);
    response.send("<h1>Hello world!</h1>");
});

// Можно создать ещё один маршрут

app.get("/about", function (request, response) {
        response.send("<h1>This website created by Nikitin SA</h1>");
});

app.listen(port, function () {
    console.log("Server started on port 3000");
});

// Сервер готов и чтобы запустить его нужно запустить этот js файл через командную строку
// После запуска сервер будет прослушивать порт 3000, пока его не оставить командой Ctrl + C

// После запуска сервера мы можем перейти в браузер и получим ошибку. Потому что при обращении наш сервер ничего не отвечает
// localhost:3000/ при обращении по этому маршруту нет ответа. Мы создадим его с помощью метода .get, где / будет маршрутом к нашей домашней странице. Строка 10.

// После запуска кода: 
// app.get("/", function (request, response) {
//     console.log(request);    
// }); у нас будет та же ошибка, но в консоли мы получим множество данных связанных с запросом.

// Чтобы дать ответ на запрос нужно использовать метод .send для параметра response
// Можно отправить как текст в ответ, так и HTML
// Хорошей практикой является написание параметров не полностью, а сокращенно для get в виде app.get("/", function (req, res) {

